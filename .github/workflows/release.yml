name: build-and-release

on:
  push:
    tags: # only run when you push something like v1.2.3
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest # x86_64-unknown-linux-gnu
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: macos-15 # x86_64-apple-darwin (uses macOS Sonoma runner)
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: windows-2025 # x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
            archive: zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      # install toolchain for the desired target triple
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # optional cache to speed up rebuilds
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          BIN_NAME=lst
          OUT=dist/${{ matrix.target }}
          mkdir -p "$OUT"
          cp target/${{ matrix.target }}/release/$BIN_NAME* "$OUT/"
          cd dist
          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            7z a ../${BIN_NAME}-${{ matrix.target }}.zip "${{ matrix.target }}"/*
          else
            tar -czf ../${BIN_NAME}-${{ matrix.target }}.tar.gz "${{ matrix.target }}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.zip
            *.tar.gz

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions: # required since Oct-2024 permission hardening
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
      - name: Create GitHub Release and attach binaries
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          files: |
            **/*.zip
            **/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
